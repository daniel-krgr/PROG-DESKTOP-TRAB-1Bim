/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.unipar.osmecanica;

import br.unipar.osmecanica.model.Produto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel
 */
public class SelecionarProdutoFrame extends javax.swing.JFrame {

    private iListener listener;
    /**
     * Creates new form SelecionarProdutoFrame
     */
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int row, int column) {
        return false;
    }
    };
    private int linhaSelecionada = -1;

    private List<Produto> listaProdutos = new ArrayList<>();
    
    private OSMecanicaFrame osMecanicaFrame;
    

    public SelecionarProdutoFrame(iListener listener) {
        this.listener = listener;
        initComponents();
        setLocationRelativeTo(null);
        
        carregaTabela();
        listaProdutos.add(new Produto("Óleo 5W30", 55.00));
        listaProdutos.add(new Produto("Filtro de combustível", 40.00));
        listaProdutos.add(new Produto("Pastilha de freio", 120.00));
        listaProdutos.add(new Produto("Velas de ignição", 90.00));
        listaProdutos.add(new Produto("Adesivo de radiador", 25.00));
        listaProdutos.add(new Produto("Bateria 60Ah", 350.00));
        listaProdutos.add(new Produto("Fluido de freio DOT 4", 30.00));
        listaProdutos.add(new Produto("Lâmpada H7", 20.00));
        listaProdutos.add(new Produto("Pneu 195/60R15", 450.00));
        listaProdutos.add(new Produto("Filtro de ar", 35.00));

        modelo.addRow(new Object[]{"Óleo 5W30", 55.00});
        modelo.addRow(new Object[]{"Filtro de combustível", 40.00});
        modelo.addRow(new Object[]{"Pastilha de freio", 120.00});
        modelo.addRow(new Object[]{"Velas de ignição", 90.00});
        modelo.addRow(new Object[]{"Adesivo de radiador", 25.00});
        modelo.addRow(new Object[]{"Bateria 60Ah", 350.00});
        modelo.addRow(new Object[]{"Fluido de freio DOT 4", 30.00});
        modelo.addRow(new Object[]{"Lâmpada H7", 20.00});
        modelo.addRow(new Object[]{"Pneu 195/60R15", 450.00});
        modelo.addRow(new Object[]{"Filtro de ar", 35.00});
        
    }
    
    
    public void carregaTabela(){
        //adiciona colunas na tebela
        modelo.addColumn("Produto");
        modelo.addColumn("Preço");
        tbSelecionarProduto.setModel(modelo);
        
        //altera a largura das colunas  
        tbSelecionarProduto.getColumnModel().getColumn(0).setPreferredWidth(300);
        tbSelecionarProduto.getColumnModel().getColumn(1).setPreferredWidth(10);
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbSelecionarProduto = new javax.swing.JTable();
        btCancelar = new javax.swing.JButton();
        btAdicionar = new javax.swing.JButton();
        tfQuantidade = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbSelecionarProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbSelecionarProduto);
        if (tbSelecionarProduto.getColumnModel().getColumnCount() > 0) {
            tbSelecionarProduto.getColumnModel().getColumn(0).setPreferredWidth(300);
            tbSelecionarProduto.getColumnModel().getColumn(1).setPreferredWidth(10);
        }

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        tfQuantidade.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfQuantidadeActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Quantidade:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfQuantidade)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfQuantidadeActionPerformed

    }//GEN-LAST:event_tfQuantidadeActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        linhaSelecionada = tbSelecionarProduto.getSelectedRow();
        
        if(linhaSelecionada >= 0){
            Object nomeObject = tbSelecionarProduto.getValueAt(linhaSelecionada, 0);
            Object valorObject = tbSelecionarProduto.getValueAt(linhaSelecionada, 1);


            String nome = (String) nomeObject;
            double valor = (double) valorObject;
            
            int quantidade = 1;
            try {
                quantidade = Integer.parseInt(tfQuantidade.getText());
                if (quantidade <= 0) {
                    JOptionPane.showMessageDialog(this,
                            "Quantidade deve ser maior que zero",
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,
                        "Quantidade deve ser um número inteiro",
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            listener.adicionarProduto(quantidade, nome, valor);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Selecione um produto",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbSelecionarProduto;
    private javax.swing.JTextField tfQuantidade;
    // End of variables declaration//GEN-END:variables
}
